{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ccipRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ccipRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastSwapParams",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinimum",
          "type": "uint256"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "testSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b50604051610a3e380380610a3e83398101604081905261002f91610097565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b0390811660805291821660a0521660c0526100ca565b80516001600160a01b038116811461009257600080fd5b919050565b600080604083850312156100aa57600080fd5b6100b38361007b565b91506100c16020840161007b565b90509250929050565b60805160a05160c05161093161010d600039600081816101750152818161028901526103af0152600060af0152600081816101ac015261043101526109316000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c9c20651161005b5780636c9c20651461015b578063735de9f71461017057806385572ffb14610197578063b0f479a1146101aa57600080fd5b806301ffc9a7146100825780630de22984146100aa5780631c195bed146100e9575b600080fd5b610095610090366004610513565b6101d0565b60405190151581526020015b60405180910390f35b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a1565b60005460015460025460035461011c936001600160a01b03908116939262ffffff81169263010000009091048216911685565b604080516001600160a01b039687168152602081019590955262ffffff909316928401929092528316606083015291909116608082015260a0016100a1565b61016e610169366004610559565b610207565b005b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b61016e6101a5366004610592565b610426565b7f00000000000000000000000000000000000000000000000000000000000000006100d1565b60006001600160e01b031982166385572ffb60e01b148061020157506001600160e01b031982166301ffc9a760e01b145b92915050565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027291906105cd565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509084169063a9059cbb906044016020604051808303816000875af11580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030991906105e6565b5060408051610100810182526001600160a01b03858116825284811660208301908152610bb88385019081523360608501908152426080860190815260a08601888152600060c0880181815260e08901918252985163414bf38960e01b8152885188166004820152955187166024870152935162ffffff1660448601529151851660648501525160848401525160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f91906105cd565b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610475576040516335fdcccd60e21b815233600482015260240160405180910390fd5b610486610481826107d5565b610489565b50565b80606001518060200190518101906104a19190610882565b8051600080546001600160a01b03199081166001600160a01b03938416179091556020830151600155604083015160028054606086015162ffffff9093166001600160b81b03199091161763010000009285169290920291909117905560809092015160038054909316911617905550565b60006020828403121561052557600080fd5b81356001600160e01b03198116811461053d57600080fd5b9392505050565b6001600160a01b038116811461048657600080fd5b6000806040838503121561056c57600080fd5b823561057781610544565b9150602083013561058781610544565b809150509250929050565b6000602082840312156105a457600080fd5b813567ffffffffffffffff8111156105bb57600080fd5b820160a0818503121561053d57600080fd5b6000602082840312156105df57600080fd5b5051919050565b6000602082840312156105f857600080fd5b8151801515811461053d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561064157610641610608565b60405290565b60405160a0810167ffffffffffffffff8111828210171561064157610641610608565b604051601f8201601f1916810167ffffffffffffffff8111828210171561069357610693610608565b604052919050565b803567ffffffffffffffff811681146106b357600080fd5b919050565b600082601f8301126106c957600080fd5b813567ffffffffffffffff8111156106e3576106e3610608565b6106f6601f8201601f191660200161066a565b81815284602083860101111561070b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261073957600080fd5b8135602067ffffffffffffffff82111561075557610755610608565b610763818360051b0161066a565b82815260069290921b8401810191818101908684111561078257600080fd5b8286015b848110156107ca576040818903121561079f5760008081fd5b6107a761061e565b81356107b281610544565b81528185013585820152835291830191604001610786565b509695505050505050565b600060a082360312156107e757600080fd5b6107ef610647565b823581526107ff6020840161069b565b6020820152604083013567ffffffffffffffff8082111561081f57600080fd5b61082b368387016106b8565b6040840152606085013591508082111561084457600080fd5b610850368387016106b8565b6060840152608085013591508082111561086957600080fd5b5061087636828601610728565b60808301525092915050565b600060a0828403121561089457600080fd5b61089c610647565b82516108a781610544565b815260208381015190820152604083015162ffffff811681146108c957600080fd5b604082015260608301516108dc81610544565b606082015260808301516108ef81610544565b6080820152939250505056fea26469706673582212205764f88a35d1551a26448f64ec446c4b4dc099a75fadda6ba2c3bcca7b58740a64736f6c63430008150033",
    "sourceMap": "488:1097:10:-:0;;;669:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;739:11;-1:-1:-1;;;;;538:20:0;;534:58;;567:25;;-1:-1:-1;;;567:25:0;;589:1;567:25;;;640:51:13;613:18;;567:25:0;;;;;;;534:58;-1:-1:-1;;;;;598:17:0;;;;;762:24:10;;::::1;;::::0;796:30:::1;;::::0;488:1097;;14:177:13;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;488:1097:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c9c20651161005b5780636c9c20651461015b578063735de9f71461017057806385572ffb14610197578063b0f479a1146101aa57600080fd5b806301ffc9a7146100825780630de22984146100aa5780631c195bed146100e9575b600080fd5b610095610090366004610513565b6101d0565b60405190151581526020015b60405180910390f35b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a1565b60005460015460025460035461011c936001600160a01b03908116939262ffffff81169263010000009091048216911685565b604080516001600160a01b039687168152602081019590955262ffffff909316928401929092528316606083015291909116608082015260a0016100a1565b61016e610169366004610559565b610207565b005b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b61016e6101a5366004610592565b610426565b7f00000000000000000000000000000000000000000000000000000000000000006100d1565b60006001600160e01b031982166385572ffb60e01b148061020157506001600160e01b031982166301ffc9a760e01b145b92915050565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027291906105cd565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509084169063a9059cbb906044016020604051808303816000875af11580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030991906105e6565b5060408051610100810182526001600160a01b03858116825284811660208301908152610bb88385019081523360608501908152426080860190815260a08601888152600060c0880181815260e08901918252985163414bf38960e01b8152885188166004820152955187166024870152935162ffffff1660448601529151851660648501525160848401525160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f91906105cd565b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610475576040516335fdcccd60e21b815233600482015260240160405180910390fd5b610486610481826107d5565b610489565b50565b80606001518060200190518101906104a19190610882565b8051600080546001600160a01b03199081166001600160a01b03938416179091556020830151600155604083015160028054606086015162ffffff9093166001600160b81b03199091161763010000009285169290920291909117905560809092015160038054909316911617905550565b60006020828403121561052557600080fd5b81356001600160e01b03198116811461053d57600080fd5b9392505050565b6001600160a01b038116811461048657600080fd5b6000806040838503121561056c57600080fd5b823561057781610544565b9150602083013561058781610544565b809150509250929050565b6000602082840312156105a457600080fd5b813567ffffffffffffffff8111156105bb57600080fd5b820160a0818503121561053d57600080fd5b6000602082840312156105df57600080fd5b5051919050565b6000602082840312156105f857600080fd5b8151801515811461053d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561064157610641610608565b60405290565b60405160a0810167ffffffffffffffff8111828210171561064157610641610608565b604051601f8201601f1916810167ffffffffffffffff8111828210171561069357610693610608565b604052919050565b803567ffffffffffffffff811681146106b357600080fd5b919050565b600082601f8301126106c957600080fd5b813567ffffffffffffffff8111156106e3576106e3610608565b6106f6601f8201601f191660200161066a565b81815284602083860101111561070b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261073957600080fd5b8135602067ffffffffffffffff82111561075557610755610608565b610763818360051b0161066a565b82815260069290921b8401810191818101908684111561078257600080fd5b8286015b848110156107ca576040818903121561079f5760008081fd5b6107a761061e565b81356107b281610544565b81528185013585820152835291830191604001610786565b509695505050505050565b600060a082360312156107e757600080fd5b6107ef610647565b823581526107ff6020840161069b565b6020820152604083013567ffffffffffffffff8082111561081f57600080fd5b61082b368387016106b8565b6040840152606085013591508082111561084457600080fd5b610850368387016106b8565b6060840152608085013591508082111561086957600080fd5b5061087636828601610728565b60808301525092915050565b600060a0828403121561089457600080fd5b61089c610647565b82516108a781610544565b815260208381015190820152604083015162ffffff811681146108c957600080fd5b604082015260608301516108dc81610544565b606082015260808301516108ef81610544565b6080820152939250505056fea26469706673582212205764f88a35d1551a26448f64ec446c4b4dc099a75fadda6ba2c3bcca7b58740a64736f6c63430008150033",
    "sourceMap": "488:1097:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:201:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;1397:201:0;;;;;;;;544:35:10;;;;;;;;-1:-1:-1;;;;;661:32:13;;;643:51;;631:2;616:18;544:35:10;497:203:13;630:32:10;;;;;;;;;;;-1:-1:-1;;;;;630:32:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1018:15:13;;;1000:34;;1065:2;1050:18;;1043:34;;;;1125:8;1113:21;;;1093:18;;;1086:49;;;;1171:15;;1166:2;1151:18;;1144:43;1224:15;;;;1218:3;1203:19;;1196:44;949:3;934:19;630:32:10;705:541:13;1043:540:10;;;;;;:::i;:::-;;:::i;:::-;;585:38;;;;;1644:130:0;;;;;;:::i;:::-;;:::i;2186:86::-;2258:8;2186:86;;1397:201;1474:4;-1:-1:-1;;;;;;1493:56:0;;-1:-1:-1;;;1493:56:0;;:100;;-1:-1:-1;;;;;;;1553:40:0;;-1:-1:-1;;;1553:40:0;1493:100;1486:107;1397:201;-1:-1:-1;;1397:201:0:o;1043:540:10:-;1132:40;;-1:-1:-1;;;1132:40:10;;1166:4;1132:40;;;643:51:13;1115:14:10;;-1:-1:-1;;;;;1132:25:10;;;;;616:18:13;;1132:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1183:47;;-1:-1:-1;;;1183:47:10;;-1:-1:-1;;;;;1208:13:10;2559:32:13;;1183:47:10;;;2541:51:13;2608:18;;;2601:34;;;;;-1:-1:-1;1183:24:10;;;;;;2514:18:13;;1183:47:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1299:208:10;;;;;;;;-1:-1:-1;;;;;1299:208:10;;;;;;;;;;;;;;1390:4;1299:208;;;;;;1408:10;1299:208;;;;;;1432:15;1299:208;;;;;;;;;;;;-1:-1:-1;1299:208:10;;;;;;;;;;;;1518:58;;-1:-1:-1;;;1518:58:10;;3213:13:13;;3209:22;;1518:58:10;;;3191:41:13;3274:24;;3270:33;;3248:20;;;3241:63;3346:24;;3372:8;3342:39;3320:20;;;3313:69;3424:24;;3420:33;;3398:20;;;3391:63;3492:24;3470:20;;;3463:54;3555:24;3533:20;;;3526:54;3618:24;;3596:20;;;3589:54;3685:24;;3681:33;;3659:20;;;3652:63;1299:208:10;;1530:13;1518:43;;;;;;3125:19:13;;1518:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1105:478;;1043:540;;:::o;1644:130:0:-;2404:10;-1:-1:-1;;;;;2426:8:0;2404:31;;2400:69;;2444:25;;-1:-1:-1;;;2444:25:0;;2458:10;2444:25;;;643:51:13;616:18;;2444:25:0;;;;;;;2400:69;1748:21:::1;;1761:7:::0;1748:21:::1;:::i;:::-;:12;:21::i;:::-;1644:130:::0;:::o;839:198:10:-;996:14;:19;;;985:45;;;;;;;;;;;;:::i;:::-;968:62;;:14;:62;;-1:-1:-1;;;;;;968:62:10;;;-1:-1:-1;;;;;968:62:10;;;;;;;;;;;-1:-1:-1;968:62:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;968:62:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;839:198:10:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;1251:131::-;-1:-1:-1;;;;;1326:31:13;;1316:42;;1306:70;;1372:1;1369;1362:12;1387:388;1455:6;1463;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;1571:9;1558:23;1590:31;1615:5;1590:31;:::i;:::-;1640:5;-1:-1:-1;1697:2:13;1682:18;;1669:32;1710:33;1669:32;1710:33;:::i;:::-;1762:7;1752:17;;;1387:388;;;;;:::o;1780:393::-;1872:6;1925:2;1913:9;1904:7;1900:23;1896:32;1893:52;;;1941:1;1938;1931:12;1893:52;1981:9;1968:23;2014:18;2006:6;2003:30;2000:50;;;2046:1;2043;2036:12;2000:50;2069:22;;2125:3;2107:16;;;2103:26;2100:46;;;2142:1;2139;2132:12;2178:184;2248:6;2301:2;2289:9;2280:7;2276:23;2272:32;2269:52;;;2317:1;2314;2307:12;2269:52;-1:-1:-1;2340:16:13;;2178:184;-1:-1:-1;2178:184:13:o;2646:277::-;2713:6;2766:2;2754:9;2745:7;2741:23;2737:32;2734:52;;;2782:1;2779;2772:12;2734:52;2814:9;2808:16;2867:5;2860:13;2853:21;2846:5;2843:32;2833:60;;2889:1;2886;2879:12;3726:127;3787:10;3782:3;3778:20;3775:1;3768:31;3818:4;3815:1;3808:15;3842:4;3839:1;3832:15;3858:257;3930:4;3924:11;;;3962:17;;4009:18;3994:34;;4030:22;;;3991:62;3988:88;;;4056:18;;:::i;:::-;4092:4;4085:24;3858:257;:::o;4120:253::-;4192:2;4186:9;4234:4;4222:17;;4269:18;4254:34;;4290:22;;;4251:62;4248:88;;;4316:18;;:::i;4378:275::-;4449:2;4443:9;4514:2;4495:13;;-1:-1:-1;;4491:27:13;4479:40;;4549:18;4534:34;;4570:22;;;4531:62;4528:88;;;4596:18;;:::i;:::-;4632:2;4625:22;4378:275;;-1:-1:-1;4378:275:13:o;4658:171::-;4725:20;;4785:18;4774:30;;4764:41;;4754:69;;4819:1;4816;4809:12;4754:69;4658:171;;;:::o;4834:530::-;4876:5;4929:3;4922:4;4914:6;4910:17;4906:27;4896:55;;4947:1;4944;4937:12;4896:55;4983:6;4970:20;5009:18;5005:2;5002:26;4999:52;;;5031:18;;:::i;:::-;5075:55;5118:2;5099:13;;-1:-1:-1;;5095:27:13;5124:4;5091:38;5075:55;:::i;:::-;5155:2;5146:7;5139:19;5201:3;5194:4;5189:2;5181:6;5177:15;5173:26;5170:35;5167:55;;;5218:1;5215;5208:12;5167:55;5283:2;5276:4;5268:6;5264:17;5257:4;5248:7;5244:18;5231:55;5331:1;5306:16;;;5324:4;5302:27;5295:38;;;;5310:7;4834:530;-1:-1:-1;;;4834:530:13:o;5369:1067::-;5437:5;5490:3;5483:4;5475:6;5471:17;5467:27;5457:55;;5508:1;5505;5498:12;5457:55;5544:6;5531:20;5570:4;5593:18;5589:2;5586:26;5583:52;;;5615:18;;:::i;:::-;5655:36;5687:2;5682;5679:1;5675:10;5671:19;5655:36;:::i;:::-;5725:15;;;5811:1;5807:10;;;;5795:23;;5791:32;;;5756:12;;;;5835:15;;;5832:35;;;5863:1;5860;5853:12;5832:35;5899:2;5891:6;5887:15;5911:496;5927:6;5922:3;5919:15;5911:496;;;6005:4;5999:3;5994;5990:13;5986:24;5983:114;;;6051:1;6080:2;6076;6069:14;5983:114;6123:22;;:::i;:::-;6186:3;6173:17;6203:33;6228:7;6203:33;:::i;:::-;6249:22;;6320:12;;;6307:26;6291:14;;;6284:50;6347:18;;6385:12;;;;5953:4;5944:14;5911:496;;;-1:-1:-1;6425:5:13;5369:1067;-1:-1:-1;;;;;;5369:1067:13:o;6441:1009::-;6555:9;6614:4;6606:5;6590:14;6586:26;6582:37;6579:57;;;6632:1;6629;6622:12;6579:57;6660:22;;:::i;:::-;6720:5;6707:19;6698:7;6691:36;6761:33;6790:2;6783:5;6779:14;6761:33;:::i;:::-;6756:2;6747:7;6743:16;6736:59;6842:2;6835:5;6831:14;6818:28;6865:18;6906:2;6898:6;6895:14;6892:34;;;6922:1;6919;6912:12;6892:34;6960:52;6997:14;6988:6;6981:5;6977:18;6960:52;:::i;:::-;6955:2;6946:7;6942:16;6935:78;7062:2;7055:5;7051:14;7038:28;7022:44;;7091:2;7081:8;7078:16;7075:36;;;7107:1;7104;7097:12;7075:36;7145:54;7184:14;7173:8;7166:5;7162:20;7145:54;:::i;:::-;7140:2;7131:7;7127:16;7120:80;7249:3;7242:5;7238:15;7225:29;7209:45;;7279:2;7269:8;7266:16;7263:36;;;7295:1;7292;7285:12;7263:36;;7334:80;7399:14;7388:8;7381:5;7377:20;7334:80;:::i;:::-;7328:3;7315:17;;7308:107;-1:-1:-1;7319:7:13;6441:1009;-1:-1:-1;;6441:1009:13:o;7455:842::-;7553:6;7606:3;7594:9;7585:7;7581:23;7577:33;7574:53;;;7623:1;7620;7613:12;7574:53;7649:22;;:::i;:::-;7701:9;7695:16;7720:33;7745:7;7720:33;:::i;:::-;7762:22;;7837:2;7822:18;;;7816:25;7800:14;;;7793:49;7887:2;7872:18;;7866:25;7935:8;7922:22;;7910:35;;7900:63;;7959:1;7956;7949:12;7900:63;7990:2;7979:14;;7972:31;8048:2;8033:18;;8027:25;8061:33;8027:25;8061:33;:::i;:::-;8121:2;8110:14;;8103:31;8179:3;8164:19;;8158:26;8193:33;8158:26;8193:33;:::i;:::-;8253:3;8242:15;;8235:32;8246:5;7455:842;-1:-1:-1;;;7455:842:13:o",
    "linkReferences": {},
    "immutableReferences": {
      "14": [
        {
          "start": 428,
          "length": 32
        },
        {
          "start": 1073,
          "length": 32
        }
      ],
      "663": [
        {
          "start": 175,
          "length": 32
        }
      ],
      "665": [
        {
          "start": 373,
          "length": 32
        },
        {
          "start": 649,
          "length": 32
        },
        {
          "start": 943,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "ccipRouter()": "0de22984",
    "getRouter()": "b0f479a1",
    "lastSwapParams()": "1c195bed",
    "supportsInterface(bytes4)": "01ffc9a7",
    "testSwap(address,address)": "6c9c2065",
    "uniswapRouter()": "735de9f7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ccipRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ccipRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSwapParams\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"testSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapReceiverTest.sol\":\"SwapReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ccip/=lib/ccip/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0x8bf61651c0188a5ef8bc5681e6cf479d4fb791cd21a35e4442376c11ce57e94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cac3c377eb9a287089af1132d5f9a01b5485fadbe7cb7831a50b677740fb540\",\"dweb:/ipfs/QmXfLHbZppRi92duuEzRk4aiMTqepE5Sr51j9mfqQXFhii\"]},\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea\",\"dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9\"]},\"lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x01d88151b2e0b675c7cd89f9dcdc1d9c92332be74938c1cedfe05e910a7cbddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939fabf11f282fdcf26342965c824b77f7bb190468f9206535a870371ffd87c5\",\"dweb:/ipfs/QmXHSWmPbVhMcYLokmvrqTxgQtVjoqzMES4RrbxyJk8s3a\"]},\"lib/ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]},\"lib/ccip/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"src/SwapReceiverTest.sol\":{\"keccak256\":\"0x54f40853ac93e2917f3fda654660634134d029a268fdf12fdb247f8ac2901c70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9acb8a4963627e5578d086c094adb2cfe880b699894b6baaca9b54e5d9f7cee\",\"dweb:/ipfs/QmcAFj3aMvBX4kxGysnQhcQjt2MSJCmVJkb2muQBnr1WUx\"]},\"src/interfaces/ICrossSwap.sol\":{\"keccak256\":\"0x4d248b4af407fd21172ebea08165f06b2c34bbb6ee2a13a1208b772ba8b729c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de01ae8dcce78413f16ec60786a937e90e046deed182bf4a80312b8ddfe0adf0\",\"dweb:/ipfs/Qme2NwNYSBcfYy2q9WydPP9kKQ2Znjp4aYCkq8kDxApvdL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ccipRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_uniswapRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ccipRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastSwapParams",
          "outputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "ccip/=lib/ccip/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "v3-core/=lib/v3-core/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SwapReceiverTest.sol": "SwapReceiver"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0x8bf61651c0188a5ef8bc5681e6cf479d4fb791cd21a35e4442376c11ce57e94a",
        "urls": [
          "bzz-raw://8cac3c377eb9a287089af1132d5f9a01b5485fadbe7cb7831a50b677740fb540",
          "dweb:/ipfs/QmXfLHbZppRi92duuEzRk4aiMTqepE5Sr51j9mfqQXFhii"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b",
        "urls": [
          "bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea",
          "dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x01d88151b2e0b675c7cd89f9dcdc1d9c92332be74938c1cedfe05e910a7cbddc",
        "urls": [
          "bzz-raw://939fabf11f282fdcf26342965c824b77f7bb190468f9206535a870371ffd87c5",
          "dweb:/ipfs/QmXHSWmPbVhMcYLokmvrqTxgQtVjoqzMES4RrbxyJk8s3a"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51",
        "urls": [
          "bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845",
          "dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c",
        "urls": [
          "bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa",
          "dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/SwapReceiverTest.sol": {
        "keccak256": "0x54f40853ac93e2917f3fda654660634134d029a268fdf12fdb247f8ac2901c70",
        "urls": [
          "bzz-raw://b9acb8a4963627e5578d086c094adb2cfe880b699894b6baaca9b54e5d9f7cee",
          "dweb:/ipfs/QmcAFj3aMvBX4kxGysnQhcQjt2MSJCmVJkb2muQBnr1WUx"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICrossSwap.sol": {
        "keccak256": "0x4d248b4af407fd21172ebea08165f06b2c34bbb6ee2a13a1208b772ba8b729c4",
        "urls": [
          "bzz-raw://de01ae8dcce78413f16ec60786a937e90e046deed182bf4a80312b8ddfe0adf0",
          "dweb:/ipfs/Qme2NwNYSBcfYy2q9WydPP9kKQ2Znjp4aYCkq8kDxApvdL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SwapReceiverTest.sol",
    "id": 761,
    "exportedSymbols": {
      "CCIPReceiver": [
        119
      ],
      "Client": [
        239
      ],
      "IAny2EVMMessageReceiver": [
        132
      ],
      "ICrossSwap": [
        1073
      ],
      "IERC165": [
        346
      ],
      "IERC20": [
        424
      ],
      "IRouterClient": [
        184
      ],
      "ISwapRouter": [
        538
      ],
      "IUniswapV3SwapCallback": [
        438
      ],
      "LinkTokenInterface": [
        334
      ],
      "SwapReceiver": [
        760
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1553:10",
    "nodes": [
      {
        "id": 650,
        "nodeType": "PragmaDirective",
        "src": "32:24:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 651,
        "nodeType": "ImportDirective",
        "src": "58:67:10",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 185,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 652,
        "nodeType": "ImportDirective",
        "src": "126:59:10",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "ccip/contracts/src/v0.8/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 240,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 653,
        "nodeType": "ImportDirective",
        "src": "186:68:10",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 654,
        "nodeType": "ImportDirective",
        "src": "255:74:10",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 335,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 655,
        "nodeType": "ImportDirective",
        "src": "331:65:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 425,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 656,
        "nodeType": "ImportDirective",
        "src": "398:49:10",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "v3-periphery/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 657,
        "nodeType": "ImportDirective",
        "src": "449:37:10",
        "nodes": [],
        "absolutePath": "src/interfaces/ICrossSwap.sol",
        "file": "./interfaces/ICrossSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 761,
        "sourceUnit": 1074,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 760,
        "nodeType": "ContractDefinition",
        "src": "488:1097:10",
        "nodes": [
          {
            "id": 663,
            "nodeType": "VariableDeclaration",
            "src": "544:35:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "0de22984",
            "mutability": "immutable",
            "name": "ccipRouter",
            "nameLocation": "569:10:10",
            "scope": 760,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 662,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 665,
            "nodeType": "VariableDeclaration",
            "src": "585:38:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "735de9f7",
            "mutability": "immutable",
            "name": "uniswapRouter",
            "nameLocation": "610:13:10",
            "scope": 760,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 664,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 668,
            "nodeType": "VariableDeclaration",
            "src": "630:32:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "1c195bed",
            "mutability": "mutable",
            "name": "lastSwapParams",
            "nameLocation": "648:14:10",
            "scope": 760,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_SwapParams_$1072_storage",
              "typeString": "struct ICrossSwap.SwapParams"
            },
            "typeName": {
              "id": 667,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 666,
                "name": "SwapParams",
                "nameLocations": [
                  "630:10:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1072,
                "src": "630:10:10"
              },
              "referencedDeclaration": 1072,
              "src": "630:10:10",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_SwapParams_$1072_storage_ptr",
                "typeString": "struct ICrossSwap.SwapParams"
              }
            },
            "visibility": "public"
          },
          {
            "id": 687,
            "nodeType": "FunctionDefinition",
            "src": "669:164:10",
            "nodes": [],
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "752:81:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 678,
                      "name": "ccipRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "762:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 679,
                      "name": "_ccipRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "775:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "762:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "762:24:10"
                },
                {
                  "expression": {
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 682,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "796:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 683,
                      "name": "_uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "812:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "796:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "796:30:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 675,
                    "name": "_ccipRouter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 670,
                    "src": "739:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 676,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 674,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "726:12:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119,
                  "src": "726:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "726:25:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "_ccipRouter",
                  "nameLocation": "689:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "681:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "_uniswapRouter",
                  "nameLocation": "710:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "702:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "680:45:10"
            },
            "returnParameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:10"
            },
            "scope": 760,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 705,
            "nodeType": "FunctionDefinition",
            "src": "839:198:10",
            "nodes": [],
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "958:79:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 694,
                      "name": "lastSwapParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "968:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapParams_$1072_storage",
                        "typeString": "struct ICrossSwap.SwapParams storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 697,
                            "name": "any2EvmMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "996:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                              "typeString": "struct Client.Any2EVMMessage memory"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1011:4:10",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 199,
                          "src": "996:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 699,
                              "name": "SwapParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "1018:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SwapParams_$1072_storage_ptr_$",
                                "typeString": "type(struct ICrossSwap.SwapParams storage pointer)"
                              }
                            }
                          ],
                          "id": 700,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1017:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapParams_$1072_storage_ptr_$",
                            "typeString": "type(struct ICrossSwap.SwapParams storage pointer)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_struct$_SwapParams_$1072_storage_ptr_$",
                            "typeString": "type(struct ICrossSwap.SwapParams storage pointer)"
                          }
                        ],
                        "expression": {
                          "id": 695,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "985:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "989:6:10",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "985:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "985:45:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                        "typeString": "struct ICrossSwap.SwapParams memory"
                      }
                    },
                    "src": "968:62:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapParams_$1072_storage",
                      "typeString": "struct ICrossSwap.SwapParams storage ref"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "968:62:10"
                }
              ]
            },
            "baseFunctions": [
              84
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "848:12:10",
            "overrides": {
              "id": 692,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "945:8:10"
            },
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "any2EvmMessage",
                  "nameLocation": "899:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "870:43:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 689,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 688,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "870:6:10",
                        "877:14:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 204,
                      "src": "870:21:10"
                    },
                    "referencedDeclaration": 204,
                    "src": "870:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$204_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:59:10"
            },
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:10"
            },
            "scope": 760,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 759,
            "nodeType": "FunctionDefinition",
            "src": "1043:540:10",
            "nodes": [],
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "1105:478:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 713,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1123:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "1115:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1115:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 723,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 720,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1166:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapReceiver_$760",
                              "typeString": "contract SwapReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapReceiver_$760",
                              "typeString": "contract SwapReceiver"
                            }
                          ],
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1158:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1158:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1158:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 715,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "1139:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 714,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "1132:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$424_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1132:15:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$424",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1148:9:10",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 381,
                      "src": "1132:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1115:57:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 728,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "1208:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 729,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "1223:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 725,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "1190:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 724,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "1183:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$424_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1183:15:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$424",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1199:8:10",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 391,
                      "src": "1183:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:47:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:47:10"
                },
                {
                  "assignments": [
                    736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 736,
                      "mutability": "mutable",
                      "name": "uniswapParams",
                      "nameLocation": "1283:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "1241:55:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 735,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 734,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nameLocations": [
                            "1241:11:10",
                            "1253:22:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 462,
                          "src": "1241:34:10"
                        },
                        "referencedDeclaration": 462,
                        "src": "1241:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 750,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 739,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "1347:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 740,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "1368:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "expression": {
                          "id": 742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1408:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1412:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1408:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 744,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1432:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1438:9:10",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1432:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 746,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "1461:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1481:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 737,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "1299:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$538_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1311:22:10",
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "1299:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$462_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:208:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1241:266:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "uniswapParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "1562:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 752,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1530:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 751,
                          "name": "ISwapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "1518:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$538_$",
                            "typeString": "type(contract ISwapRouter)"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1518:26:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$538",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1545:16:10",
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "1518:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$462_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:58:10"
                }
              ]
            },
            "functionSelector": "6c9c2065",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwap",
            "nameLocation": "1052:8:10",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "1069:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "1061:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "1086:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "1078:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1060:35:10"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:10"
            },
            "scope": 760,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 658,
              "name": "CCIPReceiver",
              "nameLocations": [
                "513:12:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 119,
              "src": "513:12:10"
            },
            "id": 659,
            "nodeType": "InheritanceSpecifier",
            "src": "513:12:10"
          },
          {
            "baseName": {
              "id": 660,
              "name": "ICrossSwap",
              "nameLocations": [
                "527:10:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1073,
              "src": "527:10:10"
            },
            "id": 661,
            "nodeType": "InheritanceSpecifier",
            "src": "527:10:10"
          }
        ],
        "canonicalName": "SwapReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          760,
          1073,
          119,
          346,
          132
        ],
        "name": "SwapReceiver",
        "nameLocation": "497:12:10",
        "scope": 761,
        "usedErrors": [
          100
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 10
}