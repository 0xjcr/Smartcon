{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ccipRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ccipRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b506040516108fd3803806108fd83398101604081905261002f91610097565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b0390811660805291821660a0521660c0526100ca565b80516001600160a01b038116811461009257600080fd5b919050565b600080604083850312156100aa57600080fd5b6100b38361007b565b91506100c16020840161007b565b90509250929050565b60805160a05160c0516107f161010c6000396000818160c801528181610240015261037e015260006089015260008181610101015261016701526107f16000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c5780630de2298414610084578063735de9f7146100c357806385572ffb146100ea578063b0f479a1146100ff575b600080fd5b61006f61006a3660046103f6565b610125565b60405190151581526020015b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6100fd6100f8366004610427565b61015c565b005b7f00000000000000000000000000000000000000000000000000000000000000006100ab565b60006001600160e01b031982166385572ffb60e01b148061015657506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101ab576040516335fdcccd60e21b815233600482015260240160405180910390fd5b6101bc6101b782610644565b6101bf565b50565b600081606001518060200190518101906101d991906106f1565b9050600082608001516000815181106101f4576101f461076a565b60200260200101516000015190506000836080015160008151811061021b5761021b61076a565b602090810291909101810151015160405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af115801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c09190610780565b5060408051610100810182526001600160a01b0380851682528551811660208084019182528785015162ffffff9081168587019081526080808b0151861660608089019182524292890192835260a089018b8152958d015160c08a01908152908d0151881660e08a01908152995163414bf38960e01b81528951891660048201529651881660248801529251909316604486015291518516606485015290516084840152905160a48301525160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af11580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee91906107a2565b505050505050565b60006020828403121561040857600080fd5b81356001600160e01b03198116811461042057600080fd5b9392505050565b60006020828403121561043957600080fd5b813567ffffffffffffffff81111561045057600080fd5b820160a0818503121561042057600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561049b5761049b610462565b60405290565b60405160a0810167ffffffffffffffff8111828210171561049b5761049b610462565b604051601f8201601f1916810167ffffffffffffffff811182821017156104ed576104ed610462565b604052919050565b803567ffffffffffffffff8116811461050d57600080fd5b919050565b600082601f83011261052357600080fd5b813567ffffffffffffffff81111561053d5761053d610462565b610550601f8201601f19166020016104c4565b81815284602083860101111561056557600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146101bc57600080fd5b600082601f8301126105a857600080fd5b8135602067ffffffffffffffff8211156105c4576105c4610462565b6105d2818360051b016104c4565b82815260069290921b840181019181810190868411156105f157600080fd5b8286015b84811015610639576040818903121561060e5760008081fd5b610616610478565b813561062181610582565b815281850135858201528352918301916040016105f5565b509695505050505050565b600060a0823603121561065657600080fd5b61065e6104a1565b8235815261066e602084016104f5565b6020820152604083013567ffffffffffffffff8082111561068e57600080fd5b61069a36838701610512565b604084015260608501359150808211156106b357600080fd5b6106bf36838701610512565b606084015260808501359150808211156106d857600080fd5b506106e536828601610597565b60808301525092915050565b600060a0828403121561070357600080fd5b61070b6104a1565b825161071681610582565b815260208381015190820152604083015162ffffff8116811461073857600080fd5b6040820152606083015161074b81610582565b6060820152608083015161075e81610582565b60808201529392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561079257600080fd5b8151801515811461042057600080fd5b6000602082840312156107b457600080fd5b505191905056fea2646970667358221220b6a589a7bb8e0fa54d2c5e87337a96f1cfc557d89e8c150984afacd4f8101d5864736f6c63430008150033",
    "sourceMap": "488:1156:9:-:0;;;630:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;700:11;-1:-1:-1;;;;;538:20:0;;534:58;;567:25;;-1:-1:-1;;;567:25:0;;589:1;567:25;;;640:51:13;613:18;;567:25:0;;;;;;;534:58;-1:-1:-1;;;;;598:17:0;;;;;723:24:9;;::::1;;::::0;757:30:::1;;::::0;488:1156;;14:177:13;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;488:1156:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c5780630de2298414610084578063735de9f7146100c357806385572ffb146100ea578063b0f479a1146100ff575b600080fd5b61006f61006a3660046103f6565b610125565b60405190151581526020015b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6100fd6100f8366004610427565b61015c565b005b7f00000000000000000000000000000000000000000000000000000000000000006100ab565b60006001600160e01b031982166385572ffb60e01b148061015657506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101ab576040516335fdcccd60e21b815233600482015260240160405180910390fd5b6101bc6101b782610644565b6101bf565b50565b600081606001518060200190518101906101d991906106f1565b9050600082608001516000815181106101f4576101f461076a565b60200260200101516000015190506000836080015160008151811061021b5761021b61076a565b602090810291909101810151015160405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af115801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c09190610780565b5060408051610100810182526001600160a01b0380851682528551811660208084019182528785015162ffffff9081168587019081526080808b0151861660608089019182524292890192835260a089018b8152958d015160c08a01908152908d0151881660e08a01908152995163414bf38960e01b81528951891660048201529651881660248801529251909316604486015291518516606485015290516084840152905160a48301525160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af11580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee91906107a2565b505050505050565b60006020828403121561040857600080fd5b81356001600160e01b03198116811461042057600080fd5b9392505050565b60006020828403121561043957600080fd5b813567ffffffffffffffff81111561045057600080fd5b820160a0818503121561042057600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561049b5761049b610462565b60405290565b60405160a0810167ffffffffffffffff8111828210171561049b5761049b610462565b604051601f8201601f1916810167ffffffffffffffff811182821017156104ed576104ed610462565b604052919050565b803567ffffffffffffffff8116811461050d57600080fd5b919050565b600082601f83011261052357600080fd5b813567ffffffffffffffff81111561053d5761053d610462565b610550601f8201601f19166020016104c4565b81815284602083860101111561056557600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146101bc57600080fd5b600082601f8301126105a857600080fd5b8135602067ffffffffffffffff8211156105c4576105c4610462565b6105d2818360051b016104c4565b82815260069290921b840181019181810190868411156105f157600080fd5b8286015b84811015610639576040818903121561060e5760008081fd5b610616610478565b813561062181610582565b815281850135858201528352918301916040016105f5565b509695505050505050565b600060a0823603121561065657600080fd5b61065e6104a1565b8235815261066e602084016104f5565b6020820152604083013567ffffffffffffffff8082111561068e57600080fd5b61069a36838701610512565b604084015260608501359150808211156106b357600080fd5b6106bf36838701610512565b606084015260808501359150808211156106d857600080fd5b506106e536828601610597565b60808301525092915050565b600060a0828403121561070357600080fd5b61070b6104a1565b825161071681610582565b815260208381015190820152604083015162ffffff8116811461073857600080fd5b6040820152606083015161074b81610582565b6060820152608083015161075e81610582565b60808201529392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561079257600080fd5b8151801515811461042057600080fd5b6000602082840312156107b457600080fd5b505191905056fea2646970667358221220b6a589a7bb8e0fa54d2c5e87337a96f1cfc557d89e8c150984afacd4f8101d5864736f6c63430008150033",
    "sourceMap": "488:1156:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:201:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;1397:201:0;;;;;;;;544:35:9;;;;;;;;-1:-1:-1;;;;;661:32:13;;;643:51;;631:2;616:18;544:35:9;497:203:13;585:38:9;;;;;1644:130:0;;;;;;:::i;:::-;;:::i;:::-;;2186:86;2258:8;2186:86;;1397:201;1474:4;-1:-1:-1;;;;;;1493:56:0;;-1:-1:-1;;;1493:56:0;;:100;;-1:-1:-1;;;;;;;1553:40:0;;-1:-1:-1;;;1553:40:0;1493:100;1486:107;1397:201;-1:-1:-1;;1397:201:0:o;1644:130::-;2404:10;-1:-1:-1;;;;;2426:8:0;2404:31;;2400:69;;2444:25;;-1:-1:-1;;;2444:25:0;;2458:10;2444:25;;;643:51:13;616:18;;2444:25:0;;;;;;;2400:69;1748:21:::1;;1761:7:::0;1748:21:::1;:::i;:::-;:12;:21::i;:::-;1644:130:::0;:::o;800:842:9:-;929:28;971:14;:19;;;960:45;;;;;;;;;;;;:::i;:::-;929:76;;1016:15;1034:14;:31;;;1066:1;1034:34;;;;;;;;:::i;:::-;;;;;;;:40;;;1016:58;;1084:16;1103:14;:31;;;1135:1;1103:34;;;;;;;;:::i;:::-;;;;;;;;;;;;:41;;1155:49;;-1:-1:-1;;;1155:49:9;;-1:-1:-1;;;;;1180:13:9;6139:32:13;;1155:49:9;;;6121:51:13;6188:18;;;6181:34;;;1103:41:9;;-1:-1:-1;1155:24:9;;;;;;6094:18:13;;1155:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1273:293:9;;;;;;;;-1:-1:-1;;;;;1273:293:9;;;;;1342:19;;1273:293;;;;;;;;;1375:14;;;;1273:293;;;;;;;;;;1403:19;;;;;1273:293;;;;;;;;;1436:15;1273:293;;;;;;;;;;;;1487:27;;;;1273:293;;;;;;1528:28;;;;1273:293;;;;;;;;1577:58;;-1:-1:-1;;;1577:58:9;;6793:13:13;;6789:22;;1577:58:9;;;6771:41:13;6854:24;;6850:33;;6828:20;;;6821:63;6926:24;;6922:39;;;6900:20;;;6893:69;7004:24;;7000:33;;6978:20;;;6971:63;7072:24;;7050:20;;;7043:54;7135:24;;7113:20;;;7106:54;7198:24;7176:20;;;7169:54;7265:24;;7261:33;;7239:20;;;7232:63;1273:293:9;;1589:13;1577:43;;;;;;6705:19:13;;1577:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;919:723;;;;800:842;:::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;705:393::-;797:6;850:2;838:9;829:7;825:23;821:32;818:52;;;866:1;863;856:12;818:52;906:9;893:23;939:18;931:6;928:30;925:50;;;971:1;968;961:12;925:50;994:22;;1050:3;1032:16;;;1028:26;1025:46;;;1067:1;1064;1057:12;1103:127;1164:10;1159:3;1155:20;1152:1;1145:31;1195:4;1192:1;1185:15;1219:4;1216:1;1209:15;1235:257;1307:4;1301:11;;;1339:17;;1386:18;1371:34;;1407:22;;;1368:62;1365:88;;;1433:18;;:::i;:::-;1469:4;1462:24;1235:257;:::o;1497:253::-;1569:2;1563:9;1611:4;1599:17;;1646:18;1631:34;;1667:22;;;1628:62;1625:88;;;1693:18;;:::i;1755:275::-;1826:2;1820:9;1891:2;1872:13;;-1:-1:-1;;1868:27:13;1856:40;;1926:18;1911:34;;1947:22;;;1908:62;1905:88;;;1973:18;;:::i;:::-;2009:2;2002:22;1755:275;;-1:-1:-1;1755:275:13:o;2035:171::-;2102:20;;2162:18;2151:30;;2141:41;;2131:69;;2196:1;2193;2186:12;2131:69;2035:171;;;:::o;2211:530::-;2253:5;2306:3;2299:4;2291:6;2287:17;2283:27;2273:55;;2324:1;2321;2314:12;2273:55;2360:6;2347:20;2386:18;2382:2;2379:26;2376:52;;;2408:18;;:::i;:::-;2452:55;2495:2;2476:13;;-1:-1:-1;;2472:27:13;2501:4;2468:38;2452:55;:::i;:::-;2532:2;2523:7;2516:19;2578:3;2571:4;2566:2;2558:6;2554:15;2550:26;2547:35;2544:55;;;2595:1;2592;2585:12;2544:55;2660:2;2653:4;2645:6;2641:17;2634:4;2625:7;2621:18;2608:55;2708:1;2683:16;;;2701:4;2679:27;2672:38;;;;2687:7;2211:530;-1:-1:-1;;;2211:530:13:o;2746:131::-;-1:-1:-1;;;;;2821:31:13;;2811:42;;2801:70;;2867:1;2864;2857:12;2882:1067;2950:5;3003:3;2996:4;2988:6;2984:17;2980:27;2970:55;;3021:1;3018;3011:12;2970:55;3057:6;3044:20;3083:4;3106:18;3102:2;3099:26;3096:52;;;3128:18;;:::i;:::-;3168:36;3200:2;3195;3192:1;3188:10;3184:19;3168:36;:::i;:::-;3238:15;;;3324:1;3320:10;;;;3308:23;;3304:32;;;3269:12;;;;3348:15;;;3345:35;;;3376:1;3373;3366:12;3345:35;3412:2;3404:6;3400:15;3424:496;3440:6;3435:3;3432:15;3424:496;;;3518:4;3512:3;3507;3503:13;3499:24;3496:114;;;3564:1;3593:2;3589;3582:14;3496:114;3636:22;;:::i;:::-;3699:3;3686:17;3716:33;3741:7;3716:33;:::i;:::-;3762:22;;3833:12;;;3820:26;3804:14;;;3797:50;3860:18;;3898:12;;;;3466:4;3457:14;3424:496;;;-1:-1:-1;3938:5:13;2882:1067;-1:-1:-1;;;;;;2882:1067:13:o;3954:1009::-;4068:9;4127:4;4119:5;4103:14;4099:26;4095:37;4092:57;;;4145:1;4142;4135:12;4092:57;4173:22;;:::i;:::-;4233:5;4220:19;4211:7;4204:36;4274:33;4303:2;4296:5;4292:14;4274:33;:::i;:::-;4269:2;4260:7;4256:16;4249:59;4355:2;4348:5;4344:14;4331:28;4378:18;4419:2;4411:6;4408:14;4405:34;;;4435:1;4432;4425:12;4405:34;4473:52;4510:14;4501:6;4494:5;4490:18;4473:52;:::i;:::-;4468:2;4459:7;4455:16;4448:78;4575:2;4568:5;4564:14;4551:28;4535:44;;4604:2;4594:8;4591:16;4588:36;;;4620:1;4617;4610:12;4588:36;4658:54;4697:14;4686:8;4679:5;4675:20;4658:54;:::i;:::-;4653:2;4644:7;4640:16;4633:80;4762:3;4755:5;4751:15;4738:29;4722:45;;4792:2;4782:8;4779:16;4776:36;;;4808:1;4805;4798:12;4776:36;;4847:80;4912:14;4901:8;4894:5;4890:20;4847:80;:::i;:::-;4841:3;4828:17;;4821:107;-1:-1:-1;4832:7:13;3954:1009;-1:-1:-1;;3954:1009:13:o;4968:842::-;5066:6;5119:3;5107:9;5098:7;5094:23;5090:33;5087:53;;;5136:1;5133;5126:12;5087:53;5162:22;;:::i;:::-;5214:9;5208:16;5233:33;5258:7;5233:33;:::i;:::-;5275:22;;5350:2;5335:18;;;5329:25;5313:14;;;5306:49;5400:2;5385:18;;5379:25;5448:8;5435:22;;5423:35;;5413:63;;5472:1;5469;5462:12;5413:63;5503:2;5492:14;;5485:31;5561:2;5546:18;;5540:25;5574:33;5540:25;5574:33;:::i;:::-;5634:2;5623:14;;5616:31;5692:3;5677:19;;5671:26;5706:33;5671:26;5706:33;:::i;:::-;5766:3;5755:15;;5748:32;5759:5;4968:842;-1:-1:-1;;;4968:842:13:o;5815:127::-;5876:10;5871:3;5867:20;5864:1;5857:31;5907:4;5904:1;5897:15;5931:4;5928:1;5921:15;6226:277;6293:6;6346:2;6334:9;6325:7;6321:23;6317:32;6314:52;;;6362:1;6359;6352:12;6314:52;6394:9;6388:16;6447:5;6440:13;6433:21;6426:5;6423:32;6413:60;;6469:1;6466;6459:12;7306:184;7376:6;7429:2;7417:9;7408:7;7404:23;7400:32;7397:52;;;7445:1;7442;7435:12;7397:52;-1:-1:-1;7468:16:13;;7306:184;-1:-1:-1;7306:184:13:o",
    "linkReferences": {},
    "immutableReferences": {
      "14": [
        {
          "start": 257,
          "length": 32
        },
        {
          "start": 359,
          "length": 32
        }
      ],
      "553": [
        {
          "start": 137,
          "length": 32
        }
      ],
      "555": [
        {
          "start": 200,
          "length": 32
        },
        {
          "start": 576,
          "length": 32
        },
        {
          "start": 894,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "ccipRouter()": "0de22984",
    "getRouter()": "b0f479a1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "uniswapRouter()": "735de9f7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ccipRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ccipRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapReceiver.sol\":\"SwapReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ccip/=lib/ccip/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0x8bf61651c0188a5ef8bc5681e6cf479d4fb791cd21a35e4442376c11ce57e94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cac3c377eb9a287089af1132d5f9a01b5485fadbe7cb7831a50b677740fb540\",\"dweb:/ipfs/QmXfLHbZppRi92duuEzRk4aiMTqepE5Sr51j9mfqQXFhii\"]},\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea\",\"dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9\"]},\"lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x01d88151b2e0b675c7cd89f9dcdc1d9c92332be74938c1cedfe05e910a7cbddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939fabf11f282fdcf26342965c824b77f7bb190468f9206535a870371ffd87c5\",\"dweb:/ipfs/QmXHSWmPbVhMcYLokmvrqTxgQtVjoqzMES4RrbxyJk8s3a\"]},\"lib/ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]},\"lib/ccip/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"src/SwapReceiver.sol\":{\"keccak256\":\"0xaba31a4f27b8401bcee54cbd3a2d629c399c2b5ffd39b719c9a72b07a6f2c512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe4e8e0f3ecfc5e79b9882b6e6ad0fbbba3e0ab641c66d607f58e4431a2e8c42\",\"dweb:/ipfs/QmS8eLsq55uUXxZB822bEqFzGWE4GbYSLRU9zKUtaK3zc4\"]},\"src/interfaces/ICrossSwap.sol\":{\"keccak256\":\"0x4d248b4af407fd21172ebea08165f06b2c34bbb6ee2a13a1208b772ba8b729c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de01ae8dcce78413f16ec60786a937e90e046deed182bf4a80312b8ddfe0adf0\",\"dweb:/ipfs/Qme2NwNYSBcfYy2q9WydPP9kKQ2Znjp4aYCkq8kDxApvdL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ccipRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_uniswapRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ccipRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "ccip/=lib/ccip/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "v3-core/=lib/v3-core/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SwapReceiver.sol": "SwapReceiver"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0x8bf61651c0188a5ef8bc5681e6cf479d4fb791cd21a35e4442376c11ce57e94a",
        "urls": [
          "bzz-raw://8cac3c377eb9a287089af1132d5f9a01b5485fadbe7cb7831a50b677740fb540",
          "dweb:/ipfs/QmXfLHbZppRi92duuEzRk4aiMTqepE5Sr51j9mfqQXFhii"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b",
        "urls": [
          "bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea",
          "dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x01d88151b2e0b675c7cd89f9dcdc1d9c92332be74938c1cedfe05e910a7cbddc",
        "urls": [
          "bzz-raw://939fabf11f282fdcf26342965c824b77f7bb190468f9206535a870371ffd87c5",
          "dweb:/ipfs/QmXHSWmPbVhMcYLokmvrqTxgQtVjoqzMES4RrbxyJk8s3a"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51",
        "urls": [
          "bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845",
          "dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj"
        ],
        "license": "MIT"
      },
      "lib/ccip/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c",
        "urls": [
          "bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa",
          "dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/SwapReceiver.sol": {
        "keccak256": "0xaba31a4f27b8401bcee54cbd3a2d629c399c2b5ffd39b719c9a72b07a6f2c512",
        "urls": [
          "bzz-raw://fe4e8e0f3ecfc5e79b9882b6e6ad0fbbba3e0ab641c66d607f58e4431a2e8c42",
          "dweb:/ipfs/QmS8eLsq55uUXxZB822bEqFzGWE4GbYSLRU9zKUtaK3zc4"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICrossSwap.sol": {
        "keccak256": "0x4d248b4af407fd21172ebea08165f06b2c34bbb6ee2a13a1208b772ba8b729c4",
        "urls": [
          "bzz-raw://de01ae8dcce78413f16ec60786a937e90e046deed182bf4a80312b8ddfe0adf0",
          "dweb:/ipfs/Qme2NwNYSBcfYy2q9WydPP9kKQ2Znjp4aYCkq8kDxApvdL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SwapReceiver.sol",
    "id": 649,
    "exportedSymbols": {
      "CCIPReceiver": [
        119
      ],
      "Client": [
        239
      ],
      "IAny2EVMMessageReceiver": [
        132
      ],
      "ICrossSwap": [
        1073
      ],
      "IERC165": [
        346
      ],
      "IERC20": [
        424
      ],
      "IRouterClient": [
        184
      ],
      "ISwapRouter": [
        538
      ],
      "IUniswapV3SwapCallback": [
        438
      ],
      "LinkTokenInterface": [
        334
      ],
      "SwapReceiver": [
        648
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1612:9",
    "nodes": [
      {
        "id": 540,
        "nodeType": "PragmaDirective",
        "src": "32:24:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 541,
        "nodeType": "ImportDirective",
        "src": "58:67:9",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 185,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 542,
        "nodeType": "ImportDirective",
        "src": "126:59:9",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "ccip/contracts/src/v0.8/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 240,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 543,
        "nodeType": "ImportDirective",
        "src": "186:68:9",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 544,
        "nodeType": "ImportDirective",
        "src": "255:74:9",
        "nodes": [],
        "absolutePath": "lib/ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "ccip/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 335,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 545,
        "nodeType": "ImportDirective",
        "src": "331:65:9",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 425,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 546,
        "nodeType": "ImportDirective",
        "src": "398:49:9",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "v3-periphery/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 547,
        "nodeType": "ImportDirective",
        "src": "449:37:9",
        "nodes": [],
        "absolutePath": "src/interfaces/ICrossSwap.sol",
        "file": "./interfaces/ICrossSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 649,
        "sourceUnit": 1074,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 648,
        "nodeType": "ContractDefinition",
        "src": "488:1156:9",
        "nodes": [
          {
            "id": 553,
            "nodeType": "VariableDeclaration",
            "src": "544:35:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "0de22984",
            "mutability": "immutable",
            "name": "ccipRouter",
            "nameLocation": "569:10:9",
            "scope": 648,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 552,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 555,
            "nodeType": "VariableDeclaration",
            "src": "585:38:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "735de9f7",
            "mutability": "immutable",
            "name": "uniswapRouter",
            "nameLocation": "610:13:9",
            "scope": 648,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 554,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 574,
            "nodeType": "FunctionDefinition",
            "src": "630:164:9",
            "nodes": [],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "713:81:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 565,
                      "name": "ccipRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "723:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 566,
                      "name": "_ccipRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "736:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "723:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "723:24:9"
                },
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 569,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "757:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 570,
                      "name": "_uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "773:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "757:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "757:30:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 562,
                    "name": "_ccipRouter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 557,
                    "src": "700:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 563,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 561,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "687:12:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 119,
                  "src": "687:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "687:25:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "_ccipRouter",
                  "nameLocation": "650:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "642:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "_uniswapRouter",
                  "nameLocation": "671:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "663:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "641:45:9"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:9"
            },
            "scope": 648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 647,
            "nodeType": "FunctionDefinition",
            "src": "800:842:9",
            "nodes": [],
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "919:723:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 583,
                      "mutability": "mutable",
                      "name": "swapParams",
                      "nameLocation": "947:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "929:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                        "typeString": "struct ICrossSwap.SwapParams"
                      },
                      "typeName": {
                        "id": 582,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 581,
                          "name": "SwapParams",
                          "nameLocations": [
                            "929:10:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1072,
                          "src": "929:10:9"
                        },
                        "referencedDeclaration": 1072,
                        "src": "929:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapParams_$1072_storage_ptr",
                          "typeString": "struct ICrossSwap.SwapParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 591,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 586,
                          "name": "any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "971:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "986:4:9",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 199,
                        "src": "971:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 588,
                            "name": "SwapParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "993:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapParams_$1072_storage_ptr_$",
                              "typeString": "type(struct ICrossSwap.SwapParams storage pointer)"
                            }
                          }
                        ],
                        "id": 589,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "992:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SwapParams_$1072_storage_ptr_$",
                          "typeString": "type(struct ICrossSwap.SwapParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_SwapParams_$1072_storage_ptr_$",
                          "typeString": "type(struct ICrossSwap.SwapParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 584,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "960:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "964:6:9",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "960:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                      "typeString": "struct ICrossSwap.SwapParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "929:76:9"
                },
                {
                  "assignments": [
                    593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 593,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "1024:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "1016:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 592,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1016:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 594,
                          "name": "any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "1034:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1049:16:9",
                        "memberName": "destTokenAmounts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 203,
                        "src": "1034:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      "id": 597,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1034:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVMTokenAmount_$191_memory_ptr",
                        "typeString": "struct Client.EVMTokenAmount memory"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1069:5:9",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 188,
                    "src": "1034:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1016:58:9"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1092:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "1084:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1084:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 602,
                          "name": "any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "1103:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1118:16:9",
                        "memberName": "destTokenAmounts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 203,
                        "src": "1103:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1135:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1103:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVMTokenAmount_$191_memory_ptr",
                        "typeString": "struct Client.EVMTokenAmount memory"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1138:6:9",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 190,
                    "src": "1103:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1084:60:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "1180:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 613,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1195:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 609,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "1162:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 608,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "1155:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$424_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1155:15:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$424",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1171:8:9",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 391,
                      "src": "1155:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:49:9"
                },
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "uniswapParams",
                      "nameLocation": "1257:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "1215:55:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 618,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nameLocations": [
                            "1215:11:9",
                            "1227:22:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 462,
                          "src": "1215:34:9"
                        },
                        "referencedDeclaration": 462,
                        "src": "1215:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 623,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "1321:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 624,
                          "name": "swapParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "1342:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                            "typeString": "struct ICrossSwap.SwapParams memory"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1353:8:9",
                        "memberName": "tokenOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1063,
                        "src": "1342:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 626,
                          "name": "swapParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "1375:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                            "typeString": "struct ICrossSwap.SwapParams memory"
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1386:3:9",
                        "memberName": "fee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1067,
                        "src": "1375:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 628,
                          "name": "swapParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "1403:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                            "typeString": "struct ICrossSwap.SwapParams memory"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1414:8:9",
                        "memberName": "receiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1071,
                        "src": "1403:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 630,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1436:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1442:9:9",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1436:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 632,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1465:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 633,
                          "name": "swapParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "1487:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                            "typeString": "struct ICrossSwap.SwapParams memory"
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1498:16:9",
                        "memberName": "amountOutMinimum",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1065,
                        "src": "1487:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 635,
                          "name": "swapParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "1528:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$1072_memory_ptr",
                            "typeString": "struct ICrossSwap.SwapParams memory"
                          }
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1539:17:9",
                        "memberName": "sqrtPriceLimitX96",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1069,
                        "src": "1528:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 621,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "1273:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$538_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1285:22:9",
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "1273:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$462_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:293:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1215:351:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "uniswapParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "1621:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$462_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 640,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "1589:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 639,
                          "name": "ISwapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "1577:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$538_$",
                            "typeString": "type(contract ISwapRouter)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1577:26:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$538",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1604:16:9",
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "1577:43:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$462_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:58:9"
                }
              ]
            },
            "baseFunctions": [
              84
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "809:12:9",
            "overrides": {
              "id": 579,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "906:8:9"
            },
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "any2EvmMessage",
                  "nameLocation": "860:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "831:43:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$204_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 576,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 575,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "831:6:9",
                        "838:14:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 204,
                      "src": "831:21:9"
                    },
                    "referencedDeclaration": 204,
                    "src": "831:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$204_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:59:9"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "919:0:9"
            },
            "scope": 648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 548,
              "name": "CCIPReceiver",
              "nameLocations": [
                "513:12:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 119,
              "src": "513:12:9"
            },
            "id": 549,
            "nodeType": "InheritanceSpecifier",
            "src": "513:12:9"
          },
          {
            "baseName": {
              "id": 550,
              "name": "ICrossSwap",
              "nameLocations": [
                "527:10:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1073,
              "src": "527:10:9"
            },
            "id": 551,
            "nodeType": "InheritanceSpecifier",
            "src": "527:10:9"
          }
        ],
        "canonicalName": "SwapReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          648,
          1073,
          119,
          346,
          132
        ],
        "name": "SwapReceiver",
        "nameLocation": "497:12:9",
        "scope": 649,
        "usedErrors": [
          100
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 9
}